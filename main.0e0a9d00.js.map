{"version":3,"sources":["scripts/main.js"],"names":["url","detailsUrl","getPhones","fetch","then","responce","ok","setTimeout","Promise","reject","Error","status","headers","get","includes","json","result","getFirstReceivedDetails","ids","response","getAllSuccessfulDetails","getThreeFastestDetails","createDiv","text","cssClass","div","document","createElement","title","list","body","append","textContent","classList","add","phones","idArr","map","phone","id","race","li","name","querySelector","catch","error","all","style","backgroundColor","position","bottom","left","i","allSettled","res","value","length"],"mappings":"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","file":"main.0e0a9d00.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst url = `\nhttps://mate-academy.github.io/phone-catalogue-static/api/phones.json`;\n\nconst detailsUrl = `\nhttps://mate-academy.github.io/phone-catalogue-static/api/phones/`;\n\nfunction getPhones() {\n  return fetch(url)\n    .then(responce => {\n      if (!responce.ok) {\n        throw setTimeout(() => {\n          return Promise.reject(new Error('No data found ' + responce.status));\n        }, 5000);\n      }\n\n      if (!responce.headers.get('content-type').includes('application/json')) {\n        throw setTimeout(() => {\n          return Promise.reject(new Error('Content-type is not suported '\n          + responce.status));\n        }, 5000);\n      }\n\n      return responce.json();\n    })\n    .then(result => result);\n}\n\nfunction getFirstReceivedDetails(ids) {\n  return fetch(`${detailsUrl}/${ids}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error('Something has gone really bad!'\n        + response.status));\n      }\n\n      return response.json();\n    });\n}\n\nfunction getAllSuccessfulDetails(ids) {\n  return fetch(`${detailsUrl}/${ids}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error('Something has gone really bad!'\n        + response.status));\n      }\n\n      return response.json();\n    });\n}\n\nfunction getThreeFastestDetails(ids) {\n  return fetch(`${detailsUrl}/${ids}.json`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error('Something has gone really bad!'\n        + response.status));\n      }\n\n      return response.json();\n    });\n}\n\n// Reusable code to create Div\nfunction createDiv(text, cssClass) {\n  const div = document.createElement('div');\n  const title = document.createElement('h3');\n  const list = document.createElement('ul');\n\n  document.body.append(div);\n  div.append(title);\n  div.append(list);\n\n  title.textContent = text;\n  div.classList.add(cssClass);\n}\n\n// getFirstReceivedDetails\ngetPhones()\n  .then(phones => {\n    const idArr = phones.map(phone => getFirstReceivedDetails(phone.id));\n\n    Promise.race(idArr)\n      .then(result => {\n        createDiv('First Received', 'first-received');\n\n        const li = document.createElement('li');\n\n        li.textContent = result.name;\n        document.querySelector('.first-received ul').append(li);\n      });\n  })\n  .catch(error => error);\n\n// getAllSuccessfulDetails\ngetPhones()\n  .then(phones => {\n    const idArr = phones.map(phone => getAllSuccessfulDetails(phone.id));\n\n    Promise.all(idArr)\n      .then(result => {\n        createDiv('All Successful', 'all-successful');\n\n        result.map(phone => {\n          const li = document.createElement('li');\n\n          li.textContent = phone.name;\n          document.querySelector('.all-successful ul').append(li);\n        });\n      });\n  })\n  .catch(error => error);\n\n// getThreeFastestDetails\ngetPhones()\n  .then(phones => {\n    const idArr = phones.map(phone => getThreeFastestDetails(phone.id));\n\n    createDiv('Three Successful', 'three-successful');\n\n    document.querySelector('.three-successful')\n      .style.backgroundColor = 'red';\n\n    document.querySelector('.three-successful')\n      .style.position = 'absolute';\n    document.querySelector('.three-successful').style.bottom = 0 + 'px';\n    document.querySelector('.three-successful').style.left = 0 + 'px';\n\n    for (let i = 0; i < idArr.length; i = i + 7) {\n      Promise.allSettled(idArr)\n        .then((res) => {\n          const li = document.createElement('li');\n\n          li.textContent = (res[i].value.name);\n          document.querySelector('.three-successful ul').append(li);\n        });\n    }\n  })\n  .catch(error => error);\n"]}